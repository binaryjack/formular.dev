@layer components {

    /* Controllable drawer keyframes */
    @keyframes drawerControllable {
        0% {
            transform: scaleY(0);
            opacity: 0;
        }

        50% {
            transform: scaleY(0.5);
            opacity: 0.7;
        }

        100% {
            transform: scaleY(1);
            opacity: 1;
        }
    }

    @keyframes expandableControllable {
        0% {
            max-height: 0;
            opacity: 0;
            overflow: hidden;
        }

        50% {
            max-height: var(--content-height, 500px);
            opacity: 0.7;
            overflow: hidden;
        }

        100% {
            max-height: var(--content-height, 500px);
            opacity: 1;
            overflow: visible;
        }
    }

    @keyframes fadeIn {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    @keyframes fadeOut {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    .drawer-content {
        /* Remove transition classes, let controller handle animations */
        /* Keep positioning and visual styles */
        position: absolute;
        background: white;
        border: 1px solid theme('colors.gray.200');
        box-shadow: theme('boxShadow.lg');
        z-index: 9999;
    }

    .expandable-drawer-content {
        position: relative;
        background: white;
        border: 1px solid theme('colors.gray.200');
        box-shadow: theme('boxShadow.lg');
        overflow: hidden;
        max-height: 0;
        transition: max-height 0.3s ease-in-out, opacity 0.3s ease-in-out;
    }

    /* Fallback for browsers without WAAPI support */
    .drawer-controllable {
        --animation-progress: 0;
        animation: drawerControllable 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--animation-progress) * -1s);
    }

    /* Enhanced version for WAAPI-supported browsers */
    .drawer-controllable.waapi-supported {
        animation: none;
    }

    /* Fallback for expandable drawers */
    .expandable-controllable {
        --animation-progress: 0;
        --content-height: 500px;
        animation: expandableControllable 1s linear infinite;
        animation-play-state: paused;
        animation-delay: calc(var(--animation-progress) * -1s);
    }

    .expandable-controllable.waapi-supported {
        animation: none;
    }
}